name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_vertex_ai.txt
        pip install -e .
    
    - name: Run linting
      run: |
        pip install flake8 black isort
        flake8 lanistr/ --max-line-length=100 --ignore=E203,W503
        black --check lanistr/
        isort --check-only lanistr/
    
    - name: Run tests
      run: |
        pip install pytest pytest-cov
        pytest tests/ --cov=lanistr --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  build-docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Google Container Registry
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCR_JSON_KEY }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/lanistr-training:latest
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/lanistr-training:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max 