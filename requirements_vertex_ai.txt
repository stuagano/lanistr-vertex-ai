# Enterprise-Ready Requirements for LANISTR on Google Cloud Vertex AI
# This file contains all dependencies needed for production deployment

# =============================================================================
# CORE MACHINE LEARNING FRAMEWORKS
# =============================================================================

# PyTorch ecosystem with CUDA 11.3 support
torch==1.11.0+cu113
torchvision==0.12.0+cu113
torchaudio==0.11.0
torchmetrics==0.9.3

# Transformers for NLP models
transformers==4.26.0

# =============================================================================
# DATA PROCESSING AND ANALYSIS
# =============================================================================

# Core data science libraries
numpy>=1.21.0,<2.0.0
pandas>=1.3.5,<2.0.0
scikit-learn>=1.3.2,<2.0.0

# Image processing
Pillow>=8.0.0,<10.0.0

# =============================================================================
# CONFIGURATION AND UTILITIES
# =============================================================================

# Configuration management
omegaconf==2.3.0

# Progress bars and utilities
tqdm>=4.62.0,<5.0.0
pytz==2021.3

# =============================================================================
# GOOGLE CLOUD PLATFORM INTEGRATION
# =============================================================================

# Core Google Cloud services
google-cloud-storage>=2.0.0,<3.0.0
google-cloud-aiplatform>=1.25.0,<2.0.0
google-auth>=2.0.0,<3.0.0
google-auth-oauthlib>=0.4.0,<2.0.0
google-auth-httplib2>=0.1.0,<1.0.0

# Additional GCP services for enterprise features
google-cloud-logging>=3.0.0,<4.0.0
google-cloud-monitoring>=2.0.0,<3.0.0
google-cloud-error-reporting>=1.0.0,<2.0.0
google-cloud-trace>=1.0.0,<2.0.0

# =============================================================================
# ENTERPRISE FEATURES AND MONITORING
# =============================================================================

# Logging and monitoring
structlog>=21.0.0,<24.0.0
prometheus-client>=0.12.0,<1.0.0

# Health checks and diagnostics
psutil>=5.8.0,<6.0.0
GPUtil>=1.4.0,<2.0.0

# Configuration validation
pydantic>=1.8.0,<2.0.0
jsonschema>=3.2.0,<4.0.0

# =============================================================================
# SECURITY AND COMPLIANCE
# =============================================================================

# Security scanning and validation
bandit>=1.7.0,<2.0.0
safety>=1.10.0,<2.0.0

# Encryption and secure communication
cryptography>=3.4.0,<4.0.0
certifi>=2021.0.0,<2024.0.0

# =============================================================================
# TESTING AND QUALITY ASSURANCE
# =============================================================================

# Testing frameworks
pytest>=6.0.0,<8.0.0
pytest-cov>=2.12.0,<4.0.0
pytest-mock>=3.6.0,<4.0.0

# Code quality and linting
black>=21.0.0,<24.0.0
flake8>=3.9.0,<7.0.0
isort>=5.9.0,<6.0.0
mypy>=0.910,<2.0.0

# =============================================================================
# PERFORMANCE AND OPTIMIZATION
# =============================================================================

# Memory and performance monitoring
memory-profiler>=0.60.0,<1.0.0
line-profiler>=3.3.0,<4.0.0

# Distributed training utilities
torch-distributed>=1.11.0
horovod>=0.23.0,<1.0.0

# =============================================================================
# DATA VALIDATION AND SANITIZATION
# =============================================================================

# Data validation
great-expectations>=0.15.0,<1.0.0
pandera>=0.7.0,<1.0.0

# =============================================================================
# MODEL SERIALIZATION AND DEPLOYMENT
# =============================================================================

# Model serving and serialization
torchserve>=0.6.0,<1.0.0
mlflow>=1.20.0,<2.0.0

# =============================================================================
# NETWORKING AND HTTP
# =============================================================================

# HTTP client and server
requests>=2.25.0,<3.0.0
urllib3>=1.26.0,<2.0.0

# =============================================================================
# UTILITIES AND HELPERS
# =============================================================================

# File and path utilities
pathlib2>=2.3.0,<3.0.0; python_version<"3.4"

# Date and time utilities
python-dateutil>=2.8.0,<3.0.0

# =============================================================================
# DEVELOPMENT AND DEBUGGING
# =============================================================================

# Debugging tools (optional for production)
ipython>=7.0.0,<9.0.0; python_version>="3.8"
jupyter>=1.0.0,<2.0.0; python_version>="3.8"

# =============================================================================
# ENTERPRISE INTEGRATION
# =============================================================================

# API documentation
fastapi>=0.68.0,<1.0.0
uvicorn>=0.15.0,<1.0.0

# Database connectors (if needed)
sqlalchemy>=1.4.0,<2.0.0
psycopg2-binary>=2.9.0,<3.0.0

# =============================================================================
# VERSION CONSTRAINTS AND COMPATIBILITY
# =============================================================================

# Ensure compatible Python version
# Requires Python >= 3.8, < 3.11 for torch 1.11.0 compatibility

# =============================================================================
# SECURITY NOTES
# =============================================================================

# These packages should be regularly updated for security patches
# Run: safety check -r requirements_vertex_ai.txt
# Run: bandit -r lanistr/ -f json -o security_report.json

# =============================================================================
# DEPLOYMENT NOTES
# =============================================================================

# For production deployment:
# 1. Use a virtual environment
# 2. Pin all versions (already done above)
# 3. Scan for vulnerabilities regularly
# 4. Monitor resource usage
# 5. Set up proper logging and monitoring
# 6. Configure backup and disaster recovery
# 7. Implement proper access controls
# 8. Set up CI/CD pipelines with security scanning 