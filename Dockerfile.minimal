# Minimal LANISTR Container for Cloud Deployment
# This container only includes essential packages for submitting jobs to Vertex AI

FROM python:3.8-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install Google Cloud SDK for gsutil
RUN curl -sSL https://sdk.cloud.google.com | bash
ENV PATH $PATH:/root/google-cloud-sdk/bin

# Set working directory
WORKDIR /workspace

# Install only essential Python packages for cloud deployment
RUN pip install --no-cache-dir \
    "torch>=2.0.0,<3.0.0" \
    "transformers==4.26.0" \
    "omegaconf==2.3.0" \
    "google-cloud-storage>=2.0.0,<3.0.0" \
    "google-cloud-aiplatform>=1.25.0,<2.0.0" \
    "google-auth>=2.0.0,<3.0.0" \
    "tqdm>=4.62.0,<5.0.0" \
    "numpy>=1.21.0,<2.0.0" \
    "pandas>=1.3.5,<2.0.0"

# Copy only essential files
COPY lanistr/ ./lanistr/
COPY setup.py .

# Create a startup script that handles GCS config files
RUN echo '#!/bin/bash\n\
# Download config file from GCS if it starts with gs://\n\
if [[ "$1" == gs://* ]]; then\n\
    echo "Downloading config from GCS: $1"\n\
    gsutil cp "$1" /tmp/config.yaml\n\
    shift\n\
    exec python lanistr/main.py --config /tmp/config.yaml "$@"\n\
else\n\
    exec python lanistr/main.py "$@"\n\
fi' > /workspace/start.sh && chmod +x /workspace/start.sh

# Install LANISTR in development mode
RUN pip install -e .

# Set the entry point
ENTRYPOINT ["/workspace/start.sh"] 